/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
 &kp Q            &kp Q             &kp W  &kp E  &kp R        &kp T             &kp Y        &kp U             &kp I      &kp O    &kp P    &kp P   
 &kp A            &kp A             &kp S  &kp D  &mt LCTRL F  &mt LEFT_GUI G    &mt LCTRL H  &mt LEFT_SHIFT J  &kp K      &kp L    &kp BSPC &kp BSPC
 &mt LEFT_SHIFT Z &mt LEFT_SHIFT Z  &kp X  &kp C  &kp V        &kp B             &kp N        &kp M             &kp COMMA  &kp DOT  &kp RET  &kp RET 
                                &lt 1 TAB &lt 1 TAB  &lt 1 TAB       &lt 2 SPACE  &lt 2 SPACE  &lt 2 SPACE
            >;
        };

        layer_1 {
            bindings = <
 &kp N1   &kp N1   &kp N2    &kp N3      &kp N4             &kp N5              &kp N6    &kp N7    &kp N8    &kp N9     &kp N0    &kp N0    
 &kp ESC  &kp ESC  &kp LEFT  &bt BT_NXT  &kp C_VOLUME_UP    &kp K_PLAY_PAUSE    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &kp PG_UP &kp PG_UP 
 &kp DEL  &kp DEL  &kp HOME  &bt BT_PRV  &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE    &kp HOME  &kp HOME  &kp HOME  &kp END    &kp PG_DN &kp PG_DN 
                               &trans &trans             &trans              &trans    &trans &trans
            >;
        };

        layer_2 {
            bindings = <
 &kp LS(EXCL) &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)   &kp LS(STAR)  &kp GRAVE      &kp LS(TILDE)  &kp LS(TILDE) 
 &kp FSLH     &kp FSLH      &kp LBKT    &kp LS(LBRC)   &kp LS(LPAR)  &kp LS(QMARK)    &kp LS(DQT)    &kp MINUS      &kp EQUAL     &kp LS(COLON)  &kp SEMI       &kp SEMI      
 &kp BSLH     &kp BSLH      &kp RBKT    &kp LS(RBRC)   &kp LS(RPAR)  &kp LS(PIPE)     &kp SQT        &kp LS(UNDER)  &kp LS(PLUS)  &kp LS(QMARK)  &kp LS(PIPE)   &kp LS(PIPE)  
                               &trans &trans             &trans              &trans    &trans &trans
            >;
        };
    };
};
